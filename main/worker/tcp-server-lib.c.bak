#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <unistd.h>

int sockfd;
int init_server()
{
    int client_sockfd;
    struct sockaddr_in addr;
 
    socklen_t len = sizeof( struct sockaddr_in );
    struct sockaddr_in from_addr;
 
    if( ( sockfd = socket( AF_INET, SOCK_STREAM, 0 ) ) < 0 ) {
        perror( "socket" );
    }
 
    addr.sin_family = AF_INET;
    addr.sin_port = htons( 10000);
    addr.sin_addr.s_addr = INADDR_ANY;
 
    if( bind( sockfd, (struct sockaddr *)&addr, sizeof( addr ) ) < 0 ) {
        perror( "bind" );
    }
 
    if( listen( sockfd, SOMAXCONN ) < 0 ) {
        perror( "listen" );
    }
 
    if( ( client_sockfd = accept( sockfd, (struct sockaddr *)&from_addr, &len ) ) < 0 ) {
        perror( "accept" );
    }

    return client_sockfd;
}

int finish_server(int *client_sockfd)
{
    shutdown (*client_sockfd, SHUT_RDWR);
    close( *client_sockfd );
    close( sockfd );
    return 0;
}

int send_real4(int *sock, float *dat, int *len)
{
  send(*sock, dat, *len*sizeof(float), 0);
  return *len;
}

int recv_real4(int *sock, float *dat, int *len)
{
  int rsize;

  rsize = recv(*sock, dat, *len*sizeof(float), 0);

  return rsize;
}
